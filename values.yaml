replicaCount: 1

image:
  repository: nginx
  tag: "1.21.1"
  pullPolicy: IfNotPresent

service:
  type: NodePort
  port: 80
  nodePort: 30007

persistence:
  enabled: true
  accessMode: ReadWriteMany
  size: 1Gi
  storageClassName: ""   
  volumeType: "efs"      
  efs:
    fileSystemId: "fs-08101e4d2fb646b97"
    path: /

resources:
  requests:
    memory: "256Mi"
    cpu: "250m"
  limits:
    memory: "512Mi"
    cpu: "500m"

envVars:
  - name: ENVIRONMENT
    value: "production"
  - name: APP_MODE
    value: "scale-up"
  - name: LOG_LEVEL
    value: "info"

volume:
  name: nginx-data
  mountName: nginx-data

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-staging
  ingressClassName: nginx
  hosts:
    - host: abhi.parveen232.tech
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - abhi.parveen232.tech
      secretName: abhi-tls-secret  # Replace with static value; dynamic handling in templates.

certificate:
  enabled: true
  namespace: default
  secretName: abhi-tls-secret  # Replace with static value.
  issuerName: letsencrypt-staging
  issuerKind: ClusterIssuer
  commonName: abhi.parveen232.tech
  dnsNames:
    - abhi.parveen232.tech

clusterIssuer:
  enabled: true
  name: letsencrypt-staging
  email: example@example.com
  server: https://acme-staging-v02.api.letsencrypt.org/directory
  privateKeySecretName: abhi-issuer-account-key  # Replace with static value.
  ingressClass: nginx
