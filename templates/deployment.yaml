apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    app: {{ .Release.Name }}-nginx
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-nginx
    spec:
      containers:
      - name: nginx
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: {{ .Values.volume.mountName }}  # Dynamically set mount name
          mountPath: /usr/share/nginx/html
        env:
        {{- if .Values.envVars }}
        {{- toYaml .Values.envVars | nindent 8 }}
        {{- end }}
        resources:  # Place `resources` under the container definition
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
      volumes:
      - name: {{ .Values.volume.name }}  # Dynamically set volume name
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-nginx-pvc  # Link to your PVC
